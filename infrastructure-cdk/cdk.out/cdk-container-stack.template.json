{
  "Resources": {
    "ContainerisedAppRepository181F38DF": {
      "Type": "AWS::ECR::Repository",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "cdk-container-stack/Containerised-App-Repository/Resource"
      }
    },
    "ContainerisedAppVPC69636DDA": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-container-stack/Containerised-App-VPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-container-stack/Containerised-App-VPC/Resource"
      }
    },
    "ContainerisedAppVPCPublicSubnet1SubnetB629AEAC": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/18",
        "VpcId": {
          "Ref": "ContainerisedAppVPC69636DDA"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "cdk-container-stack/Containerised-App-VPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-container-stack/Containerised-App-VPC/PublicSubnet1/Subnet"
      }
    },
    "ContainerisedAppVPCPublicSubnet1RouteTableA5B915F6": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "ContainerisedAppVPC69636DDA"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-container-stack/Containerised-App-VPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-container-stack/Containerised-App-VPC/PublicSubnet1/RouteTable"
      }
    },
    "ContainerisedAppVPCPublicSubnet1RouteTableAssociationD1079161": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "ContainerisedAppVPCPublicSubnet1RouteTableA5B915F6"
        },
        "SubnetId": {
          "Ref": "ContainerisedAppVPCPublicSubnet1SubnetB629AEAC"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-container-stack/Containerised-App-VPC/PublicSubnet1/RouteTableAssociation"
      }
    },
    "ContainerisedAppVPCPublicSubnet1DefaultRoute73F9BB0F": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "ContainerisedAppVPCPublicSubnet1RouteTableA5B915F6"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "ContainerisedAppVPCIGW0293CCBE"
        }
      },
      "DependsOn": [
        "ContainerisedAppVPCVPCGW7E162F5A"
      ],
      "Metadata": {
        "aws:cdk:path": "cdk-container-stack/Containerised-App-VPC/PublicSubnet1/DefaultRoute"
      }
    },
    "ContainerisedAppVPCPublicSubnet1EIPE3C34D4A": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-container-stack/Containerised-App-VPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-container-stack/Containerised-App-VPC/PublicSubnet1/EIP"
      }
    },
    "ContainerisedAppVPCPublicSubnet1NATGatewayD1F268BC": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "ContainerisedAppVPCPublicSubnet1EIPE3C34D4A",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "ContainerisedAppVPCPublicSubnet1SubnetB629AEAC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-container-stack/Containerised-App-VPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-container-stack/Containerised-App-VPC/PublicSubnet1/NATGateway"
      }
    },
    "ContainerisedAppVPCPublicSubnet2SubnetE7E45768": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.64.0/18",
        "VpcId": {
          "Ref": "ContainerisedAppVPC69636DDA"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "cdk-container-stack/Containerised-App-VPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-container-stack/Containerised-App-VPC/PublicSubnet2/Subnet"
      }
    },
    "ContainerisedAppVPCPublicSubnet2RouteTableECD37D05": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "ContainerisedAppVPC69636DDA"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-container-stack/Containerised-App-VPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-container-stack/Containerised-App-VPC/PublicSubnet2/RouteTable"
      }
    },
    "ContainerisedAppVPCPublicSubnet2RouteTableAssociation067BA501": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "ContainerisedAppVPCPublicSubnet2RouteTableECD37D05"
        },
        "SubnetId": {
          "Ref": "ContainerisedAppVPCPublicSubnet2SubnetE7E45768"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-container-stack/Containerised-App-VPC/PublicSubnet2/RouteTableAssociation"
      }
    },
    "ContainerisedAppVPCPublicSubnet2DefaultRouteEBFA0315": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "ContainerisedAppVPCPublicSubnet2RouteTableECD37D05"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "ContainerisedAppVPCIGW0293CCBE"
        }
      },
      "DependsOn": [
        "ContainerisedAppVPCVPCGW7E162F5A"
      ],
      "Metadata": {
        "aws:cdk:path": "cdk-container-stack/Containerised-App-VPC/PublicSubnet2/DefaultRoute"
      }
    },
    "ContainerisedAppVPCPublicSubnet2EIP5EEFD99F": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-container-stack/Containerised-App-VPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-container-stack/Containerised-App-VPC/PublicSubnet2/EIP"
      }
    },
    "ContainerisedAppVPCPublicSubnet2NATGateway0D667421": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "ContainerisedAppVPCPublicSubnet2EIP5EEFD99F",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "ContainerisedAppVPCPublicSubnet2SubnetE7E45768"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-container-stack/Containerised-App-VPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-container-stack/Containerised-App-VPC/PublicSubnet2/NATGateway"
      }
    },
    "ContainerisedAppVPCPrivateSubnet1Subnet0F3072F9": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/18",
        "VpcId": {
          "Ref": "ContainerisedAppVPC69636DDA"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "cdk-container-stack/Containerised-App-VPC/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-container-stack/Containerised-App-VPC/PrivateSubnet1/Subnet"
      }
    },
    "ContainerisedAppVPCPrivateSubnet1RouteTable9990A6B1": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "ContainerisedAppVPC69636DDA"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-container-stack/Containerised-App-VPC/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-container-stack/Containerised-App-VPC/PrivateSubnet1/RouteTable"
      }
    },
    "ContainerisedAppVPCPrivateSubnet1RouteTableAssociation3F64E3BE": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "ContainerisedAppVPCPrivateSubnet1RouteTable9990A6B1"
        },
        "SubnetId": {
          "Ref": "ContainerisedAppVPCPrivateSubnet1Subnet0F3072F9"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-container-stack/Containerised-App-VPC/PrivateSubnet1/RouteTableAssociation"
      }
    },
    "ContainerisedAppVPCPrivateSubnet1DefaultRoute3DAE94D9": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "ContainerisedAppVPCPrivateSubnet1RouteTable9990A6B1"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "ContainerisedAppVPCPublicSubnet1NATGatewayD1F268BC"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-container-stack/Containerised-App-VPC/PrivateSubnet1/DefaultRoute"
      }
    },
    "ContainerisedAppVPCPrivateSubnet2Subnet5259327C": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.192.0/18",
        "VpcId": {
          "Ref": "ContainerisedAppVPC69636DDA"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "cdk-container-stack/Containerised-App-VPC/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-container-stack/Containerised-App-VPC/PrivateSubnet2/Subnet"
      }
    },
    "ContainerisedAppVPCPrivateSubnet2RouteTableF64E962D": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "ContainerisedAppVPC69636DDA"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-container-stack/Containerised-App-VPC/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-container-stack/Containerised-App-VPC/PrivateSubnet2/RouteTable"
      }
    },
    "ContainerisedAppVPCPrivateSubnet2RouteTableAssociation6FDA455C": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "ContainerisedAppVPCPrivateSubnet2RouteTableF64E962D"
        },
        "SubnetId": {
          "Ref": "ContainerisedAppVPCPrivateSubnet2Subnet5259327C"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-container-stack/Containerised-App-VPC/PrivateSubnet2/RouteTableAssociation"
      }
    },
    "ContainerisedAppVPCPrivateSubnet2DefaultRoute90485307": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "ContainerisedAppVPCPrivateSubnet2RouteTableF64E962D"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "ContainerisedAppVPCPublicSubnet2NATGateway0D667421"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-container-stack/Containerised-App-VPC/PrivateSubnet2/DefaultRoute"
      }
    },
    "ContainerisedAppVPCIGW0293CCBE": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-container-stack/Containerised-App-VPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-container-stack/Containerised-App-VPC/IGW"
      }
    },
    "ContainerisedAppVPCVPCGW7E162F5A": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "ContainerisedAppVPC69636DDA"
        },
        "InternetGatewayId": {
          "Ref": "ContainerisedAppVPCIGW0293CCBE"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-container-stack/Containerised-App-VPC/VPCGW"
      }
    },
    "ContainerisedAppECSCluster86B29B23": {
      "Type": "AWS::ECS::Cluster",
      "Metadata": {
        "aws:cdk:path": "cdk-container-stack/Containerised-App-ECS-Cluster/Resource"
      }
    },
    "ContainerisedAppFargateServiceLB4454FBBF": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false"
          }
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "ContainerisedAppFargateServiceLBSecurityGroup7BF60712",
              "GroupId"
            ]
          }
        ],
        "Subnets": [
          {
            "Ref": "ContainerisedAppVPCPublicSubnet1SubnetB629AEAC"
          },
          {
            "Ref": "ContainerisedAppVPCPublicSubnet2SubnetE7E45768"
          }
        ],
        "Type": "application"
      },
      "DependsOn": [
        "ContainerisedAppVPCPublicSubnet1DefaultRoute73F9BB0F",
        "ContainerisedAppVPCPublicSubnet2DefaultRouteEBFA0315"
      ],
      "Metadata": {
        "aws:cdk:path": "cdk-container-stack/Containerised-App-Fargate-Service/LB/Resource"
      }
    },
    "ContainerisedAppFargateServiceLBSecurityGroup7BF60712": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB cdkcontainerstackContainerisedAppFargateServiceLBFFA79F50",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80
          }
        ],
        "VpcId": {
          "Ref": "ContainerisedAppVPC69636DDA"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-container-stack/Containerised-App-Fargate-Service/LB/SecurityGroup/Resource"
      }
    },
    "ContainerisedAppFargateServiceLBSecurityGrouptocdkcontainerstackContainerisedAppFargateServiceSecurityGroupD973446280D51AA068": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "ContainerisedAppFargateServiceLBSecurityGroup7BF60712",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "ContainerisedAppFargateServiceSecurityGroup20EC9367",
            "GroupId"
          ]
        },
        "FromPort": 80,
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "cdk-container-stack/Containerised-App-Fargate-Service/LB/SecurityGroup/to cdkcontainerstackContainerisedAppFargateServiceSecurityGroupD9734462:80"
      }
    },
    "ContainerisedAppFargateServiceLBPublicListenerAB5D7A5F": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "ContainerisedAppFargateServiceLBPublicListenerECSGroup36D9894C"
            },
            "Type": "forward"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "ContainerisedAppFargateServiceLB4454FBBF"
        },
        "Port": 80,
        "Protocol": "HTTP"
      },
      "Metadata": {
        "aws:cdk:path": "cdk-container-stack/Containerised-App-Fargate-Service/LB/PublicListener/Resource"
      }
    },
    "ContainerisedAppFargateServiceLBPublicListenerECSGroup36D9894C": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Port": 80,
        "Protocol": "HTTP",
        "TargetType": "ip",
        "VpcId": {
          "Ref": "ContainerisedAppVPC69636DDA"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-container-stack/Containerised-App-Fargate-Service/LB/PublicListener/ECSGroup/Resource"
      }
    },
    "ContainerisedAppFargateServiceTaskDefTaskRoleE758F423": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-container-stack/Containerised-App-Fargate-Service/TaskDef/TaskRole/Resource"
      }
    },
    "ContainerisedAppFargateServiceTaskDefC3A2EEF3": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Essential": true,
            "Image": "131852824746.dkr.ecr.eu-central-1.amazonaws.com/cdk-container-stack-repo:1",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "ContainerisedAppFargateServiceTaskDefwebLogGroupE53B63B1"
                },
                "awslogs-stream-prefix": "Containerised-App-Fargate-Service",
                "awslogs-region": {
                  "Ref": "AWS::Region"
                }
              }
            },
            "Name": "web",
            "PortMappings": [
              {
                "ContainerPort": 80,
                "Protocol": "tcp"
              }
            ]
          }
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "ContainerisedAppFargateServiceTaskDefExecutionRole00B1B46B",
            "Arn"
          ]
        },
        "Family": "cdkcontainerstackContainerisedAppFargateServiceTaskDef9C315E93",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE"
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "ContainerisedAppFargateServiceTaskDefTaskRoleE758F423",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-container-stack/Containerised-App-Fargate-Service/TaskDef/Resource"
      }
    },
    "ContainerisedAppFargateServiceTaskDefwebLogGroupE53B63B1": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "cdk-container-stack/Containerised-App-Fargate-Service/TaskDef/web/LogGroup/Resource"
      }
    },
    "ContainerisedAppFargateServiceTaskDefExecutionRole00B1B46B": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-container-stack/Containerised-App-Fargate-Service/TaskDef/ExecutionRole/Resource"
      }
    },
    "ContainerisedAppFargateServiceTaskDefExecutionRoleDefaultPolicy222F1B5F": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ContainerisedAppFargateServiceTaskDefwebLogGroupE53B63B1",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ContainerisedAppRepository181F38DF",
                  "Arn"
                ]
              }
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ContainerisedAppFargateServiceTaskDefExecutionRoleDefaultPolicy222F1B5F",
        "Roles": [
          {
            "Ref": "ContainerisedAppFargateServiceTaskDefExecutionRole00B1B46B"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-container-stack/Containerised-App-Fargate-Service/TaskDef/ExecutionRole/DefaultPolicy/Resource"
      }
    },
    "ContainerisedAppFargateService3ABC1342": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "Cluster": {
          "Ref": "ContainerisedAppECSCluster86B29B23"
        },
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50
        },
        "DesiredCount": 2,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "web",
            "ContainerPort": 80,
            "TargetGroupArn": {
              "Ref": "ContainerisedAppFargateServiceLBPublicListenerECSGroup36D9894C"
            }
          }
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "ContainerisedAppFargateServiceSecurityGroup20EC9367",
                  "GroupId"
                ]
              }
            ],
            "Subnets": [
              {
                "Ref": "ContainerisedAppVPCPrivateSubnet1Subnet0F3072F9"
              },
              {
                "Ref": "ContainerisedAppVPCPrivateSubnet2Subnet5259327C"
              }
            ]
          }
        },
        "TaskDefinition": {
          "Ref": "ContainerisedAppFargateServiceTaskDefC3A2EEF3"
        }
      },
      "DependsOn": [
        "ContainerisedAppFargateServiceLBPublicListenerECSGroup36D9894C",
        "ContainerisedAppFargateServiceLBPublicListenerAB5D7A5F"
      ],
      "Metadata": {
        "aws:cdk:path": "cdk-container-stack/Containerised-App-Fargate-Service/Service/Service"
      }
    },
    "ContainerisedAppFargateServiceSecurityGroup20EC9367": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "cdk-container-stack/Containerised-App-Fargate-Service/Service/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "ContainerisedAppVPC69636DDA"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-container-stack/Containerised-App-Fargate-Service/Service/SecurityGroup/Resource"
      }
    },
    "ContainerisedAppFargateServiceSecurityGroupfromcdkcontainerstackContainerisedAppFargateServiceLBSecurityGroupA1C9C2D480639F32BF": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "ContainerisedAppFargateServiceSecurityGroup20EC9367",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "ContainerisedAppFargateServiceLBSecurityGroup7BF60712",
            "GroupId"
          ]
        },
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "cdk-container-stack/Containerised-App-Fargate-Service/Service/SecurityGroup/from cdkcontainerstackContainerisedAppFargateServiceLBSecurityGroupA1C9C2D4:80"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAACn1SwW7CMAz9lt1DgU3aeYwxhIS2qkXc02CKR0mqxAFVVf99SdpCx6ad/Pz8bMd2ptF08hxNHl74xYzE7jiuhdIQ1SlxcWQJGGW1ADbfy09LpSU2V9KQtoI8N4y7wA4JlWyYr1WD0FGdQKkMktJVK++9hoF4jOptKTy/jecstlmBIrWZhFD6hhJlCTY8K+DG37iZMUog942vYg8Wq9ibD05LTnDhFYs1nh28FV5JAu1wL2hf0nkzchs4nEASS0FYjVQttbJleMO/xCLXYMwveiUD7yc3UT0vrHHdw+I6+M51zv1U5vgGe5TYz3TPKEkcJegB1+WmoM/YnqODod2o5ORHNdGsLN2Ww7bWiu9eecGlgN1dOhTcEIrCKbKgQJmf3bn+zg5D/PCHOnSzyU7T40F84zq7C/SLHLgNQ35yP0i1dw82Vi4vHKpFDStU7ra5Vvm1RI+bpmFxRQclx0/uk7s//mUQR9pKwhNESWu/AQWZU5UAAwAA"
      },
      "Metadata": {
        "aws:cdk:path": "cdk-container-stack/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Outputs": {
    "ContainerisedAppFargateServiceLoadBalancerDNSB0C55F1D": {
      "Value": {
        "Fn::GetAtt": [
          "ContainerisedAppFargateServiceLB4454FBBF",
          "DNSName"
        ]
      }
    },
    "ContainerisedAppFargateServiceServiceURL643152BC": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "ContainerisedAppFargateServiceLB4454FBBF",
                "DNSName"
              ]
            }
          ]
        ]
      }
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  }
}